/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sessions;

import entity.EbookEntity;
import entity.ItemEntity;
import java.util.ArrayList;
import java.util.List;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import item.EBook;
import item.Item;

/**
 *
 * @author
 * Piotr
 */
@Stateless
public class EbookFacade extends AbstractFacade<EbookEntity> {
    @PersistenceContext(unitName = "cse308entitytestPU")
    private EntityManager em;

    @Override
    protected EntityManager getEntityManager() {
        return em;
    }

    public EbookFacade() {
        super(EbookEntity.class);
    }
    
     public List<EBook> getAllEbooks()
    {
         List<EbookEntity> listOfEbooks = this.findAll();
         List<EBook> listOfEbooksAsObjects = new ArrayList();
         
         
         for(int i = 0; i < listOfEbooks.size(); i++)
         {
             EbookEntity x = listOfEbooks.get(i);
             
             EBook ebookToBeAddedToList = convertToEbook(x);
             listOfEbooksAsObjects.add(ebookToBeAddedToList);
         }
        
         
         return listOfEbooksAsObjects;
    }
    
     
     public EBook convertToEbook(EbookEntity e)
    {
        ItemEntity i = e.getItemEntity();
        EBook ebookToBeReturned = new EBook(i.getItemName(), i.getIdItem(), i.getItemImage(), i.getType(), i.getBookSubject(), i.getAuthor(), e.getIsbn(), i.getNumberOfLikes(), i.getNumberOfDislikes(), i.getAvailableCopies(), i.getLibraryCopies(), i.getDateAdded());
        
        return ebookToBeReturned;
    }
     
    
}
